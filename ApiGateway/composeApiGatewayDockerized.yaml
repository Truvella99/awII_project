services:
  keycloak:
    image: keycloak/keycloak
    ports:
      - '9090:9090' # Bind port 9090 externally to 9090 internally
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KEYCLOAK_IMPORT: /opt/keycloak/data/import/realm-export.json
      KEYCLOAK_HOSTNAME: http://localhost:9090 # Updated to match the external port
    volumes:
      - ./realm-export.json:/opt/keycloak/data/import/realm-export.json
    command: start-dev --import-realm --http-port=9090 # Set Keycloak to use port 9090 internally
    networks:
      - shared_network

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on: [ zookeeper ]
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - 9092:9092
      - 29092:29092
    networks:
      - shared_network

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - shared_network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
      - KAFKA_CLUSTERS_0_SCHEMA_REGISTRY=http://localhost:8090
      - SPRING_PROFILES_ACTIVE=prod
    ports:
      - 9000:8080
    depends_on:
      - kafka
    networks:
      - shared_network

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8081
    ports:
      - 8090:8081
    depends_on: [zookeeper, kafka]
    networks:
      - shared_network

  prometheus:
    image: prom/prometheus:v2.35.0
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yaml  # Correct volume mapping
    command:
      - "--config.file=/etc/prometheus/prometheus.yaml"  # Correct file path in the container
      - "--web.listen-address=:9091"  # Change the web listen port to 9091
    ports:
      - 9091:9091
    networks:
      - shared_network

  grafana:
    image: grafana/grafana-oss:8.5.2
    #pull_policy: always
    #container_name: grafana
    #restart: unless-stopped
    user: root
    ports:
      - 3000:3000
    links:
      - prometheus:prometheus
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafanaConfig:/etc/grafana/provisioning
      - ./grafanaConfig/dashboards:/var/lib/grafana/dashboards   # Mount dashboard directory
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_SERVER_DOMAIN=localhost
      # Enabled for logging
      - GF_LOG_MODE=console file
      - GF_LOG_FILTERS=alerting.notifier.slack:debug alertmanager:debug ngalert:debug
    networks:
      - shared_network

  loki:
    image: grafana/loki:main
    container_name: loki
    command:
      - "--config.file=/etc/loki/local-config.yaml"
    ports:
      - 3100:3100
    networks:
      - shared_network

  apiGateway:
    image: 'docker.io/library/api-gateway:0.0.1-SNAPSHOT'
    restart: always
    ports:
      - "8080:8080"
    expose:
      - "8080"
    build:
      context: .
    volumes:
      - ./logs:/workspace/logs
    depends_on:
      - keycloak
      - kafka
      - zookeeper
      - kafka-ui
      - schema-registry
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      #- CLIENT_SECRET=hyNPBlfIeAlG9xk1RpqZb7t0a4ZxShLE
      #- ISSUER_URI=http://keycloak:8080/realms/CRMRealm
      #- REDIRECT_URI=http://localhost:8089/login/oauth2/code/api-gateway-client
      - LOKI_URL=http://loki:3100/loki/api/v1/push
    networks:
      - shared_network

  frontend:
    image: 'frontend:1.0'
    ports:
      - "5173:80"
    networks:
      - shared_network

networks:
  shared_network:
    external: true
    name: shared_network
    driver: bridge
